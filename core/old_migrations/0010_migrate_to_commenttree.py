# Generated by Django 4.2 on 2023-04-14 18:59

from django.db import migrations
from core.models import CommentTree

"""
GOAL: Migrate old Comment model to new Comment model inheriting from MP_Node.
WHY: Treebeard's MP_Node model is a better fit for self-referential objects.
COMPLICATION: Treebeard's MP_Node uses custom manager that has a function
called add_root() for adding a root node. In migrations, we don't have 
access to custom manager functions.
    SOURCE: https://github.com/django-treebeard/django-treebeard/issues/264
SOLUTION: Manually create each object and save. The only complicated 
attribute is path, which has a custom function to generate it. The
other attributes, such as depth, numchild, etc. are easy to calculate 
since we're just adding root. To be totally honest, I don't know if 
this will actually work since I fucked up the migration initially 
by forgetting to include .save(), and I couldn't revert since psycopg3 
was giving an error (something about duplicating keys). Probably will
have to flush production db anyways. Triggered.
    SOURCE: https://stackoverflow.com/a/37685925
"""


def transfer_comments(apps, schema_editor):
    Article = apps.get_model("core", "Article")
    Comment = apps.get_model("core", "Comment")
    zarathustra = Article.objects.first()

    for comment in Comment.objects.all():
        new_comment = CommentTree(
            user=comment.user,
            article=zarathustra,
            annotation=comment.annotation,
            created_on=comment.created_on,
            updated_on=comment.updated_on,
            comment_html=comment.comment_html,
            comment_json=comment.comment_json,
        )
        new_comment.add_root()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0009_alter_commenttree_created_on"),
    ]

    operations = [
        migrations.RunPython(transfer_comments),
    ]
